{"version":3,"sources":["../src/index.ts","../src/mixin/style.ts","../src/design-system/atom/button/Button.tsx","../src/design-system/atom/categoryIconButton/CategoryIconButton.tsx","../src/design-system/atom/chart/noiseMeterChart/NoiseMeterChart.tsx","../src/design-system/atom/chart/timeDBChart/TimeDBChart.tsx","../src/design-system/atom/comment/OneLineReviewInput.tsx","../src/design-system/atom/decibelLevel/Decibel.tsx","../src/design-system/atom/emailInput/EmailInput.tsx","../src/design-system/atom/filterButton/FilterBtn.tsx","../src/design-system/atom/iconButton/backButton/BackBtn.tsx","../src/design-system/atom/iconButton/infoButton/InfoBtn.tsx","../src/design-system/atom/iconButton/settingButton/SettingBtn.tsx","../src/design-system/atom/input/Input.tsx","../src/design-system/atom/logo/Logo.tsx","../src/design-system/atom/navItem/NavItem.tsx","../src/design-system/atom/pwInput/PwInput.tsx","../src/design-system/molecule/bottomSheet/BottomSheet.tsx","../src/design-system/molecule/expandBottomSheet/ExpandBottomSheet.tsx","../src/design-system/molecule/decibelButton/DecibelButton.tsx","../src/design-system/molecule/decibelLabel/DecibelLabel.tsx","../src/design-system/molecule/measureDecibelLabel/MDecibelLabel.tsx","../src/design-system/molecule/modal/Modal.tsx","../src/design-system/molecule/navList/NavList.tsx"],"sourcesContent":["export { default as Button } from \"./design-system/atom/button/Button\";\r\nexport { default as CategoryIconButton } from \"./design-system/atom/categoryIconButton/CategoryIconButton\";\r\nexport { default as NoiseMeterChart } from \"./design-system/atom/chart/noiseMeterChart/NoiseMeterChart\";\r\nexport { default as TimeDBChart } from \"./design-system/atom/chart/timeDBChart/TimeDBChart\";\r\nexport { default as OneLineReviewInput } from \"./design-system/atom/comment/OneLineReviewInput\";\r\nexport { default as Decibel } from \"./design-system/atom/decibelLevel/Decibel\";\r\nexport { default as EmailInput } from \"./design-system/atom/emailInput/EmailInput\";\r\nexport { default as FilterButton } from \"./design-system/atom/filterButton/FilterBtn\";\r\nexport { default as BackButton } from \"./design-system/atom/iconButton/backButton/BackBtn\";\r\nexport { default as InfoButton } from \"./design-system/atom/iconButton/infoButton/InfoBtn\";\r\nexport { default as SettingButton } from \"./design-system/atom/iconButton/settingButton/SettingBtn\";\r\nexport { default as Input } from \"./design-system/atom/input/Input\";\r\nexport { default as Logo } from \"./design-system/atom/logo/Logo\";\r\nexport { default as NavItem } from \"./design-system/atom/navItem/NavItem\";\r\nexport { default as PasswordInput } from \"./design-system/atom/pwInput/PwInput\";\r\n\r\nexport { default as BottomSheet } from \"./design-system/molecule/bottomSheet/BottomSheet\";\r\nexport { default as ExpandBottomSheet } from \"./design-system/molecule/expandBottomSheet/ExpandBottomSheet\";\r\nexport { default as DecibelButton } from \"./design-system/molecule/decibelButton/DecibelButton\";\r\nexport { default as DecibelLabel } from \"./design-system/molecule/decibelLabel/DecibelLabel\";\r\nexport { default as MeasureDecibelLabel } from \"./design-system/molecule/measureDecibelLabel/MDecibelLabel\";\r\nexport { default as Modal } from \"./design-system/molecule/modal/Modal\";\r\nexport { default as NavList } from \"./design-system/molecule/navList/NavList\";","export const flexRow = \"flex flex-row\";\r\nexport const flexCol = \"flex flex-col\";\r\nexport const flexRowCenter = `${flexRow} items-center justify-center`;\r\nexport const flexColCenter = `${flexCol} items-center justify-center`;","'use client';\r\n\r\nimport { flexRowCenter } from \"@/mixin/style\";\r\n\r\n// 버튼 타입에 따른 Tailwind 클래스를 미리 정의\r\nconst buttonStyles = {\r\n  primary: \"bg-primary-blue text-white\",\r\n  secondary: \"bg-neutral-gray text-white\",\r\n  tertiary: \"bg-white text-primary-blue border-[0.054375rem] border-primary-blue\", \r\n  ghost: \"bg-white text-neutral-gray-light border-none\", // 배경이 흰색, 글씨가 #808080\r\n};\r\n\r\n// 버튼 크기에 따른 Tailwind 클래스를 미리 정의\r\nconst sizeStyles = {\r\n  large: \"w-[21.25rem] h-[3.125rem] rounded-[3.625rem] font-semibold text-xl\", // 340x50, 58px, semibold(600), 20px\r\n  medium: \"w-[15.25rem] h-[2.5rem] rounded-[0.437rem] font-medium text-md\", // 244x40, 6.99px, medium(500), 16px\r\n  small: \"w-[9.875rem] h-[2.5rem] rounded-[0.437rem] font-regular text-base\",\r\n  xsmall: \"w-[6.875rem] h-[2.5rem] rounded-[0.437rem] font-regular text-base\",\r\n};\r\n\r\n// buttonStyles 객체의 키를 타입으로 지정\r\nexport type ButtonType = keyof typeof buttonStyles;\r\n\r\n// sizeStyles 객체의 키를 타입으로 지정\r\nexport type ButtonSize = keyof typeof sizeStyles;\r\n\r\nexport interface ButtonProps {\r\n  /** What button type? */\r\n  buttonType?: ButtonType;\r\n  /** How large should the button be? */\r\n  size?: ButtonSize;\r\n  /** Button contents */\r\n  children: React.ReactNode;\r\n  /** Click handler */\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  /** Optional custom class to override default styles */\r\n  className?: string; // ✅ 사용자 지정 클래스 추가\r\n}\r\n\r\n/** Primary UI component for user interaction */\r\nexport default function Button({\r\n  buttonType = 'primary',\r\n  size = 'large',\r\n  children,\r\n  onClick,\r\n  className,\r\n  ...props\r\n}: ButtonProps) {\r\n  // 공통적으로 사용되는 폰트 스타일 및 중앙 정렬 클래스\r\n  const commonStyles = `${flexRowCenter}`;\r\n  \r\n  const typeStyles = buttonStyles[buttonType];\r\n  const currentSizeStyles = sizeStyles[size];\r\n\r\n  // 모든 클래스를 합쳐서 className에 전달\r\n  const finalClassNames = `${commonStyles} ${typeStyles} ${currentSizeStyles} ${className || ''}`;\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={finalClassNames}\r\n      onClick={onClick}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};","\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport { flexRowCenter } from \"@/mixin/style\";\r\n\r\ntype CategoryIconButtonProps = {\r\n    iconSrc: string; // 아이콘 경로\r\n    label: string; // 버튼 하단 텍스트\r\n    active?: boolean; // 버튼 활성화 상태\r\n    className?: string; // 버튼 스타일\r\n    iconClassName?: string; // 아이콘 컨테이너 스타일\r\n    textClassName?: string; // 텍스트 스타일\r\n    onClick?: React.MouseEventHandler<HTMLButtonElement>; // 클릭 이벤트\r\n};\r\n\r\nexport default function CategoryIconButton({\r\n    iconSrc,\r\n    label,\r\n    active,\r\n    className = \"\",\r\n    iconClassName = \"\",\r\n    textClassName = \"\",\r\n    onClick,\r\n}: CategoryIconButtonProps) {\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`\r\n                min-w-[4.75rem] \r\n                min-h-[2.5rem] \r\n                rounded-[1.25rem] \r\n                border \r\n                px-[1rem]\r\n                py-[0.625rem] \r\n                ${active ? \"border-primary-blue bg-neutral-gray-bg\" : \"border-neutral-gray-soft bg-white\"} \r\n                ${className}\r\n                ${flexRowCenter}\r\n            `}\r\n        >\r\n            <div className={`${flexRowCenter}`}>\r\n                <div\r\n                    className={`\r\n                        relative \r\n                        w-[1.5rem] \r\n                        h-[1.5rem] \r\n                        ${iconClassName}\r\n                        ${flexRowCenter}\r\n                    `}\r\n                >\r\n                    <Image src={iconSrc} alt={`${label}`} fill priority/>\r\n                </div>\r\n                <p\r\n                    className={`\r\n                        text-sm\r\n                        font-regular \r\n                        ${active ? \"text-[#0062FF]\" : \"text-[#727272]\"} \r\n                        ${flexRowCenter}\r\n                        ${textClassName}\r\n                    `}\r\n                >\r\n                    {label}\r\n                </p>\r\n            </div>\r\n        </button>\r\n    );\r\n}","\"use client\";\r\nimport { buildStyles, CircularProgressbarWithChildren } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\n\r\ninterface NoiseMeterChartProps {\r\n  db: number;          // 현재 데시벨\r\n  time: string;        // \"00:15\" 또는 \"+00:03\"\r\n}\r\n\r\nexport default function NoiseMeterChart({ \r\n  db, \r\n  time \r\n}: NoiseMeterChartProps) {\r\n  const progressValue = db === 0 ? 0.01 : db;\r\n  const displayDb = db < 10 ? `0${db}` : db;\r\n\r\n  return (\r\n    <div className=\"w-[13.75rem] h-[13.75rem]\"> {/* 220px = 13.75rem */}\r\n      <CircularProgressbarWithChildren\r\n        value={progressValue}\r\n        maxValue={120} // 최대 dB 스케일\r\n        strokeWidth={12}\r\n        styles={buildStyles({\r\n          pathColor: \"#3D87FF\",\r\n          trailColor: \"#CFE2FF\",\r\n          pathTransitionDuration: 0.5,\r\n          strokeLinecap: \"round\"   // 끝점을 둥글게\r\n        })}\r\n      >\r\n        <p \r\n          className={`\r\n            absolute \r\n            top-1/2 \r\n            left-1/2 \r\n            -translate-x-1/2 \r\n            -translate-y-1/2\r\n            font-medium \r\n            text-[4.375rem] \r\n            leading-[3.875rem] \r\n            tracking-[0.125rem] \r\n            text-black\r\n          `}\r\n        >\r\n          {displayDb}\r\n        </p>\r\n        <p \r\n          className={`\r\n            absolute \r\n            left-1/2 \r\n            top-[calc(50%+1.125rem)] \r\n            -translate-x-1/2\r\n            text-sm \r\n            font-medium\r\n            text-neutral-sub\r\n            mt-[1.125rem]\r\n          `}\r\n        >\r\n          {time}\r\n        </p>\r\n      </CircularProgressbarWithChildren>\r\n    </div>\r\n  );\r\n}\r\n","\"use client\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  ResponsiveContainer,\r\n  Cell,\r\n  LabelList,\r\n} from \"recharts\";\r\n\r\nexport interface TimeDBChartProps {\r\n  data: { timeRange: string; db: number; count: number }[];\r\n  currentRange: string;\r\n}\r\n\r\nexport default function TimeDBChart({ data, currentRange }: TimeDBChartProps) {\r\n  const barRadius = 10.62; // px 값 그대로 사용\r\n  \r\n  // Recharts에서 라벨을 렌더링하기 위한 커스텀 함수\r\n  const renderDbLabel = (props: any) => {\r\n    const { x, y, width, value } = props;\r\n    // value prop이 존재하고 현재 시간대일 경우에만 렌더링\r\n    if (value !== undefined && value !== null) {\r\n      const entry = data.find((d) => d.db === value);\r\n      const isCurrent = entry && entry.timeRange === currentRange;\r\n      if (isCurrent) {\r\n        return (\r\n          <text\r\n            x={x + width / 2}\r\n            y={y - 10} // 막대 위 10px 위치에 표시\r\n            textAnchor=\"middle\"\r\n            dominantBaseline=\"middle\"\r\n            fill=\"#060606\"\r\n            fontFamily=\"Pretendard\"\r\n            fontWeight=\"400\"\r\n            fontSize=\"0.929375rem\"\r\n          >\r\n            {value} dB\r\n          </text>\r\n        );\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderCountLabel = (props: any) => {\r\n    const { x, y, width, height, value } = props;\r\n    return (\r\n      <text\r\n        x={x + width / 2}\r\n        y={y + height / 2}\r\n        textAnchor=\"middle\"\r\n        dominantBaseline=\"middle\"\r\n        fill=\"#060606\"\r\n        fontFamily=\"Pretendard\"\r\n        fontWeight=\"500\"\r\n        fontSize=\"1.061875rem\"\r\n      >\r\n        {value}\r\n      </text>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"w-full h-[6.875rem]\">\r\n      <ResponsiveContainer>\r\n        <BarChart\r\n          data={data}\r\n          barGap={62.36}\r\n        >\r\n          <XAxis\r\n            dataKey=\"timeRange\"\r\n            tick={{\r\n              fill: \"#060606\",\r\n              fontFamily: \"Pretendard\",\r\n              fontWeight: 400,\r\n              fontStyle: \"normal\",\r\n              fontSize: 14.87,\r\n              letterSpacing: \"0px\",\r\n            }}\r\n          />\r\n          <YAxis domain={[0, 120]} tickLine={true} tick={false} />\r\n          <Bar\r\n            dataKey=\"db\"\r\n            radius={[barRadius, barRadius, 0, 0]}\r\n            barSize={72.76}\r\n          >\r\n            {data.map((entry, index) => {\r\n              const isCurrent = entry.timeRange === currentRange;\r\n              return (\r\n                <Cell\r\n                  key={`cell-${index}`}\r\n                  fill={isCurrent ? \"#7BD685\" : \"#979797\"}\r\n                />\r\n              );\r\n            })}\r\n            {/* dB 라벨을 Bar 위에 표시 */}\r\n            <LabelList dataKey=\"db\" content={renderDbLabel} />\r\n            {/* Count 라벨을 Bar 중앙에 표시 */}\r\n            <LabelList dataKey=\"count\" content={renderCountLabel} />\r\n          </Bar>\r\n        </BarChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n}","\"use client\";\r\n\r\nimport { flexCol } from \"@/mixin/style\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface OneLineReviewInputProps {\r\n  value: string;                          // 외부 state\r\n  onChange: (value: string) => void;      // 외부 state setter\r\n  submitAttempted?: boolean;              // 부모에서 '제출 시도' 여부 전달\r\n  maxLength?: number;                     // 기본 150\r\n}\r\n\r\nexport default function OneLineReviewInput({\r\n  value,\r\n  onChange,\r\n  submitAttempted = false,\r\n  maxLength = 150,\r\n}: OneLineReviewInputProps) {\r\n  const isEmpty = value.trim().length === 0;\r\n  const isMax = value.length === maxLength;\r\n\r\n  // 에러 조건\r\n  const showError = (submitAttempted && isEmpty) || isMax;\r\n\r\n  return (\r\n    <div className={`${flexCol} gap-[0.5rem] w-full`}>\r\n        <label className=\"text-base font-bold mb-[0.25rem]\">\r\n            한줄평\r\n        </label>\r\n        <motion.div\r\n            animate={submitAttempted && isEmpty ? { x: [0, -10, 10, -10, 10, 0] } : { x: 0 }}\r\n            transition={{ duration: 0.4 }}\r\n        >\r\n            <textarea\r\n                value={value}\r\n                onChange={(e) => {\r\n                    const next = e.target.value;\r\n                    if (next.length <= maxLength) onChange(next); // 150자 초과 입력 차단\r\n                }}\r\n                placeholder=\"소음 상황이나 추가로 적고 싶은 내용을 150자 이내로 간단히 작성해주세요. (예: 공사 소음으로 인해 시끄러움)\"\r\n                className={`\r\n                    w-full \r\n                    h-[6.4375rem] \r\n                    p-[0.625rem] \r\n                    rounded-[0.42rem] \r\n                    resize-none \r\n                    outline-none \r\n                    bg-neutral-gray-bg \r\n                    border ${showError ? \"border-error\" : \"border-neutral-gray-soft\"}\r\n                    text-sm \r\n                    placeholder-[#808080]\r\n                `}\r\n                aria-invalid={showError}\r\n            />\r\n        </motion.div>\r\n        {/* 안내 문구(빈값) 또는 글자수(입력됨) */}\r\n        {isEmpty ? (\r\n            <p \r\n                className={`\r\n                    text-right \r\n                    text-sm \r\n                    font-regular \r\n                    ${submitAttempted ? \"text-error\" : \"text-neutral-gray-light\"}\r\n                `}\r\n            >\r\n                한 줄평을 입력해야 등록할 수 있습니다.\r\n            </p>\r\n        ) : (\r\n            <div \r\n                className={`\r\n                    text-right \r\n                    text-sm \r\n                    font-regular \r\n                    ${isMax ? \"text-error\" : \"text-neutral-gray-light\"}\r\n                `}\r\n            >\r\n                {value.length} / {maxLength}\r\n            </div>\r\n        )}\r\n    </div>\r\n  );\r\n}","import Image from \"next/image\";\r\n\r\n// 데시벨 레벨별 아이콘 경로\r\nconst DECIBEL_ICONS = {\r\n    default: \"/icons/default.svg\",\r\n    quiet: \"/icons/quiet.svg\",\r\n    moderate: \"/icons/moderate.svg\",\r\n    loud: \"/icons/loud.svg\",\r\n};\r\n\r\n// 아이콘 크기. TailwindCSS 클래스를 적용합니다.\r\nconst SIZE_CLASSES = {\r\n    sm: \"w-[1.25rem] h-[1.25rem]\",\r\n    md: \"w-[1.5rem] h-[1.5rem]\",\r\n    lg: \"w-[2rem] h-[2rem]\",\r\n};\r\n\r\nexport type DecibelIconSize = keyof typeof SIZE_CLASSES;\r\nexport type DecibelIconLevel = keyof typeof DECIBEL_ICONS;\r\n\r\nexport interface DecibelIconProps {\r\n    level?: DecibelIconLevel;\r\n    size?: DecibelIconSize;\r\n    iconClassName?: string; // 아이콘 컨테이너 스타일\r\n}\r\n\r\nexport default function Decibel({\r\n    level = \"default\",\r\n    size = \"md\",\r\n    iconClassName = \"\",\r\n}: DecibelIconProps) {\r\n\r\n    const iconSrc = DECIBEL_ICONS[level];\r\n    const sizeClass = SIZE_CLASSES[size];\r\n\r\n    return (\r\n        <div className={`relative ${sizeClass} ${iconClassName}`}>\r\n            <Image src={iconSrc} alt={`${level} decibel level icon`} fill priority/>\r\n        </div>\r\n    );\r\n}","import { flexRow } from \"@/mixin/style\";\r\nimport Image from \"next/image\";\r\n\r\ntype EmailInputProps = {\r\n  value?: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nexport default function EmailInput({ \r\n    value, \r\n    onChange, \r\n    placeholder = \"이메일\",\r\n    ...props\r\n} : EmailInputProps ) {\r\n\r\n    return(\r\n        <div \r\n            className={`\r\n                w-full \r\n                h-[2.75rem]\r\n                py-[0.625rem]\r\n                px-4\r\n                ${flexRow}\r\n                items-center\r\n                gap-[0.5rem]\r\n                bg-neutral-gray-bg\r\n                rounded-[0.5rem]\r\n            `}\r\n        >\r\n            <div className=\"w-[1.125rem] h-[1.125rem] relative\">\r\n                <Image src=\"/icons/login/email-ico.svg\" alt=\"email icon\" fill priority/> \r\n            </div>\r\n            <input \r\n                type=\"email\"\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n                {...props}\r\n                className=\"\r\n                    flex-1\r\n                    font-regular\r\n                    text-base \r\n                    placeholder-[#808080]\r\n                    bg-transparent\r\n                    focus:outline-none\r\n                \"\r\n            />\r\n        </div>\r\n    );\r\n}","\"use client\";\r\n\r\nimport { flexRowCenter } from \"@/mixin/style\";\r\nimport Image from \"next/image\";\r\n\r\ntype DecibelButtonProps = {\r\n    label: string; // 버튼 하단 텍스트\r\n    iconSrc?: string;\r\n    className?: string; // 버튼 스타일\r\n    textClassName?: string; // 텍스트 스타일\r\n    onClick: React.MouseEventHandler<HTMLButtonElement>; // 클릭 이벤트\r\n};\r\n\r\nexport default function FilterBtn({\r\n    label=\"필터\",\r\n    iconSrc = \"/icons/filter/ico_map_filter.svg\",\r\n    className = \"\",\r\n    textClassName = \"\",\r\n    onClick,\r\n}: DecibelButtonProps) {\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`\r\n                min-w-[4.375rem] \r\n                min-h-[2.5rem]\r\n                py-[0.25rem] px-[0.3125rem]\r\n                bg-neutral-gray-bg \r\n                border border-neutral-gray-soft\r\n                ${flexRowCenter}\r\n                gap-[0.5rem]\r\n                ${className}\r\n            `}\r\n            aria-label={label}\r\n        >\r\n            <div className=\"w-[1.5rem] h-[1.5rem] relative\">\r\n                <Image src={iconSrc} alt=\"filterIcon\" fill priority/>\r\n            </div>\r\n            <p className={`text-base font-regular ${textClassName}`}>\r\n                {label}\r\n            </p>\r\n        </button>\r\n    );\r\n}","\"use client\";\r\n\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\n\r\nconst sizeStyles = {\r\n  sm: \"w-[1.125rem] h-[1.125rem]\",\r\n  md: \"w-[1.5rem] h-[1.5rem]\",\r\n  lg: \"w-[2rem] h-[2rem]\",\r\n};\r\n\r\nexport type BackButtonSize = keyof typeof sizeStyles;\r\n\r\nexport interface BackButtonProps {\r\n  size?: BackButtonSize;\r\n  href?: string; // 있으면 Link 동작\r\n  onClick?: () => void; // 없으면 모달 등 커스텀 동작\r\n}\r\n\r\nexport default function BackButton({\r\n  size = \"md\",\r\n  href,\r\n  onClick,\r\n}: BackButtonProps) {\r\n  const currentSize = sizeStyles[size];\r\n\r\n  const icon = (\r\n    <Image\r\n      src=\"/icons/back-ico.svg\"\r\n      alt=\"back button\"\r\n      fill\r\n      priority\r\n    />\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <Link\r\n        href={href}\r\n        aria-label=\"뒤로가기\"\r\n        className={`${currentSize} relative inline-block`}\r\n      >\r\n        {icon}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className={`${currentSize} relative`}\r\n      aria-label=\"뒤로가기\"\r\n      onClick={onClick}\r\n    >\r\n      {icon}\r\n    </button>\r\n  );\r\n}","\"use client\";\r\n\r\nimport Image from \"next/image\";\r\n\r\nconst sizeStyles = {\r\n  sm: \"w-[1.125rem] h-[1.125rem]\",\r\n  md: \"w-[1.5rem] h-[1.5rem]\",\r\n  lg: \"w-[2rem] h-[2rem]\",\r\n}\r\n\r\nexport type InfoBtnSize = keyof typeof sizeStyles;\r\n\r\nexport interface InfoBtnProps {\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\r\n  size?: InfoBtnSize; // 기본값 md\r\n}\r\n\r\nexport default function InfoBtn({\r\n  onClick,\r\n  size = \"md\",\r\n}: InfoBtnProps) {\r\n\r\n  const currentSize = `${sizeStyles[size]}`;\r\n\r\n  return (\r\n    <button\r\n      className={`${currentSize} relative`}\r\n      onClick={onClick}\r\n      aria-label=\"정보 버튼\"\r\n    >\r\n      <Image src=\"/icons/info-ico.svg\" alt=\"info button\" fill priority/>\r\n    </button>\r\n  );\r\n}","\"use client\";\r\n\r\nimport Image from \"next/image\";\r\n\r\nconst sizeStyles = {\r\n  sm: \"w-[1.125rem] h-[1.125rem]\",\r\n  md: \"w-[1.5rem] h-[1.5rem]\",\r\n  lg: \"w-[2rem] h-[2rem]\",\r\n}\r\n\r\nexport type SettingBtnSize = keyof typeof sizeStyles;\r\n\r\nexport interface SettingBtnProps {\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\r\n  size?: SettingBtnSize; // 기본값 md\r\n}\r\n\r\nexport default function SettingBtn({\r\n  onClick,\r\n  size = \"md\",\r\n}: SettingBtnProps) {\r\n\r\n  const currentSize = `${sizeStyles[size]}`;\r\n\r\n  return (\r\n    <button\r\n      className={`${currentSize} relative`}\r\n      onClick={onClick}\r\n      aria-label=\"설정 버튼\"\r\n    >\r\n      <Image src=\"/icons/setting-ico.svg\" alt=\"setting button\" fill priority/>\r\n    </button>\r\n  );\r\n}","\"use client\";\r\n\r\nimport { forwardRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ntype InputProps = {\r\n  inputType?: string;\r\n  value?: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n  hasError?: boolean;\r\n} & React.InputHTMLAttributes<HTMLInputElement>;\r\n\r\nconst Input = forwardRef<HTMLInputElement, InputProps>(\r\n  (\r\n    {\r\n      inputType = \"text\",\r\n      value,\r\n      onChange,\r\n      placeholder,\r\n      hasError = false,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <motion.div\r\n        animate={\r\n          hasError\r\n            ? {\r\n                x: [0, -8, 8, -6, 6, -4, 4, 0],\r\n              }\r\n            : {}\r\n        }\r\n        transition={{ duration: 0.4 }}\r\n        className={`\r\n          w-full \r\n          h-[2.75rem]\r\n          py-[0.625rem]\r\n          px-[0.75rem]\r\n          rounded-[0.5rem]\r\n          bg-neutral-gray-bg\r\n          ${hasError ? \"border border-error\" : \"border-none\"}\r\n        `}\r\n      >\r\n        <input\r\n          ref={ref}\r\n          type={inputType}\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder={placeholder}\r\n          {...props}\r\n          className=\"\r\n            flex-1\r\n            font-regular\r\n            text-base \r\n            placeholder-[#808080]\r\n            bg-transparent\r\n            focus:outline-none\r\n          \"\r\n        />\r\n      </motion.div>\r\n    );\r\n  }\r\n);\r\n\r\nInput.displayName = \"Input\";\r\n\r\nexport default Input;\r\n","import Image from \"next/image\";\r\n\r\ntype LogoSize = \"md\" | \"lg\";\r\n\r\nconst sizeMap: Record<LogoSize, string> = {\r\n  md: \"w-[6.5rem] h-[1.5625rem]\",\r\n  lg: \"w-[9.1875rem] h-[2.24875rem]\",\r\n};\r\n\r\nexport default function Logo({ size = \"md\" }: { size?: LogoSize }) {\r\n    return (\r\n        <div className={`${sizeMap[size]} relative`} >\r\n            <Image src=\"/icons/logo.svg\" alt=\"soridam logo\" fill priority/>\r\n        </div>\r\n    );\r\n}","'use client';\r\n\r\nimport { flexColCenter, flexRowCenter } from \"@/mixin/style\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { AnimatePresence, motion, useReducedMotion } from \"framer-motion\";\r\nimport { usePathname } from \"next/navigation\";\r\n\r\ninterface NavImg {\r\n    icon: string;\r\n    iconLabel: string; // next/image용 정적 import 아이콘\r\n    activeIcon: string; // 선택 시 아이콘 변경\r\n}\r\n\r\ntype NavItemProps = {\r\n  href: string;\r\n  img: NavImg;\r\n  label: string;\r\n  currentPath?: string; // Storybook용 fallback\r\n};\r\n\r\nexport default function NavItem({\r\n  href,\r\n  img,\r\n  label,\r\n  currentPath, \r\n}: NavItemProps) {\r\n    const path = usePathname() ?? currentPath ?? \"\"; // null이면 빈 문자열\r\n    const isActive = path.startsWith(href);\r\n    const prefersReducedMotion = useReducedMotion();\r\n\r\n    return (\r\n        <Link \r\n            href={href} \r\n            className={`\r\n                w-[3.25rem] \r\n                h-[3.125rem] \r\n                ${flexColCenter} \r\n                gap-[0.375rem]\r\n            `}\r\n        >\r\n            <div className=\"w-[1.5rem] h-[1.5rem] relative\">\r\n                <AnimatePresence mode=\"wait\" initial={false}>\r\n                    {isActive ? (\r\n                        <motion.div\r\n                            key=\"active-icon\"\r\n                            initial={{ opacity: 0, scale: prefersReducedMotion ? 1 : 0.9 }}\r\n                            animate={{ opacity: 1, scale: 1 }}\r\n                            exit={{ opacity: 0, scale: prefersReducedMotion ? 1 : 0.9 }}\r\n                            transition={{ duration: 0.18 }}\r\n                            className=\"absolute inset-0\"\r\n                        >\r\n                            <Image src={img.activeIcon} alt={img.iconLabel} fill priority/>\r\n                        </motion.div>\r\n                    ) : (\r\n                        <motion.div\r\n                            key=\"idle-icon\"\r\n                            initial={{ opacity: 0, scale: prefersReducedMotion ? 1 : 0.95 }}\r\n                            animate={{ opacity: 1, scale: 1 }}\r\n                            exit={{ opacity: 0, scale: prefersReducedMotion ? 1 : 0.95 }}\r\n                            transition={{ duration: 0.18 }}\r\n                            className=\"absolute inset-0\"\r\n                        >\r\n                            <Image src={img.icon} alt={img.iconLabel} fill priority/>\r\n                        </motion.div>\r\n                    )}\r\n                </AnimatePresence>\r\n            </div>\r\n            <motion.p \r\n                className={`\r\n                    ${flexRowCenter}\r\n                    font-pretendard \r\n                    font-medium \r\n                    text-sm \r\n                    leading-5 \r\n                    tracking-[0]\r\n                `}\r\n                animate={{\r\n                    color: isActive ? 'var(--color-primary-blue)' : 'var(--color-neutral-black)',\r\n                    scale: prefersReducedMotion ? 1 : (isActive ? 1.02 : 1),\r\n                }}\r\n                transition={{ duration: 0.18 }}\r\n            >\r\n                {label}\r\n            </motion.p>\r\n        </Link>\r\n    );\r\n}","\"use client\";\r\n\r\nimport { flexRow } from \"@/mixin/style\";\r\nimport Image from \"next/image\";\r\nimport { useState } from \"react\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\ntype PwInputProps = {\r\n  value?: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  placeholder?: string;\r\n};\r\n\r\nexport default function PwInput({ \r\n    value, \r\n    onChange, \r\n    placeholder = \"비밀번호\",\r\n    ...props\r\n} : PwInputProps ) {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const togglePassword = () => {\r\n        setShowPassword((prev) => !prev);\r\n    };\r\n\r\n    return(\r\n        <div \r\n            className={`\r\n                w-full \r\n                h-[2.75rem]\r\n                py-[0.625rem]\r\n                px-4\r\n                ${flexRow}\r\n                items-center\r\n                gap-[0.5rem]\r\n                bg-neutral-gray-bg\r\n                rounded-[0.5rem]\r\n            `}\r\n        >\r\n            <div className=\"w-[1.125rem] h-[1.125rem] relative\">\r\n                <Image src=\"/icons/login/password-ico.svg\" alt=\"password icon\" fill priority/> \r\n            </div>\r\n            <input \r\n                type={showPassword ? \"text\" : \"password\"}\r\n                value={value}\r\n                onChange={onChange}\r\n                placeholder={placeholder}\r\n                {...props}\r\n                className=\"\r\n                    flex-1\r\n                    font-regular\r\n                    text-base \r\n                    placeholder-[#808080]\r\n                    bg-transparent\r\n                    focus:outline-none\r\n                \"\r\n            />\r\n            <AnimatePresence>\r\n                {value && value.length > 0 && (\r\n                    <motion.button\r\n                        key=\"pw-toggle-btn\"\r\n                        type=\"button\"\r\n                        onClick={togglePassword}\r\n                        className=\"w-[1.5rem] h-[1.5rem] relative\"\r\n                        initial={{ opacity: 0, scale: 0.8 }}\r\n                        animate={{ opacity: 1, scale: 1 }}\r\n                        exit={{ opacity: 0, scale: 0.8 }}\r\n                        transition={{ duration: 0.2 }}\r\n                    >\r\n                        <AnimatePresence mode=\"wait\" initial={false}>\r\n                            {showPassword ? (\r\n                                <motion.div\r\n                                    key=\"open\"\r\n                                    initial={{ opacity: 0, scale: 0.8 }}\r\n                                    animate={{ opacity: 1, scale: 1 }}\r\n                                    exit={{ opacity: 0, scale: 0.8 }}\r\n                                    transition={{ duration: 0.2 }}\r\n                                    className=\"absolute inset-0\"\r\n                                >\r\n                                    <Image\r\n                                        src=\"/icons/login/pw-open-ico.svg\"\r\n                                        alt=\"password show\"\r\n                                        fill\r\n                                        priority\r\n                                    />\r\n                                </motion.div>\r\n                            ) : (\r\n                                <motion.div\r\n                                    key=\"close\"\r\n                                    initial={{ opacity: 0, scale: 0.8 }}\r\n                                    animate={{ opacity: 1, scale: 1 }}\r\n                                    exit={{ opacity: 0, scale: 0.8 }}\r\n                                    transition={{ duration: 0.2 }}\r\n                                    className=\"absolute inset-0\"\r\n                                >\r\n                                    <Image\r\n                                        src=\"/icons/login/pw-close-ico.svg\"\r\n                                        alt=\"password hide\"\r\n                                        fill\r\n                                        priority\r\n                                    />\r\n                                </motion.div>\r\n                            )}\r\n                        </AnimatePresence>\r\n                    </motion.button>\r\n                )}\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n} ","\"use client\";\r\n\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\n\r\nexport interface BottomSheetProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport default function BottomSheet({ isOpen, onClose, children }: BottomSheetProps) {\r\n    return(\r\n        <AnimatePresence>\r\n            {isOpen && (\r\n                <motion.div\r\n                    key=\"overlay\"\r\n                    className=\"bg-black/60 fixed inset-0 w-full h-screen flex items-end\"\r\n                    onClick={onClose}\r\n                    initial={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                    exit={{ opacity: 0 }}\r\n                >\r\n                    <motion.div\r\n                        key=\"bottomSheet\"\r\n                        initial={{ y: \"100%\" }}\r\n                        animate={{ y: 0 }}\r\n                        exit={{ y: \"100%\" }}\r\n                        transition={{ type: \"tween\", duration: 0.3 }}\r\n                        drag=\"y\"\r\n                        dragConstraints={{ top: 0, bottom: 0 }}\r\n                        dragElastic={0.2}\r\n                        onDragEnd={(event, info) => {\r\n                            if (info.offset.y > 100) {\r\n                                onClose();\r\n                            }\r\n                        }}\r\n                        className=\"\r\n                            w-full\r\n                            h-[80vh]\r\n                            max-h-[40.3125rem]\r\n                            rounded-tl-lg \r\n                            rounded-tr-lg \r\n                            shadow-[0.25rem_0.25rem_0.8125rem_0px_#00000040]\r\n                            bg-white\r\n                            overflow-y-auto\r\n                        \"\r\n                        onClick={(e) => e.stopPropagation()}\r\n                    >\r\n                        {children}\r\n                    </motion.div>\r\n                </motion.div>\r\n            )}\r\n        </AnimatePresence>\r\n    );\r\n}","\"use client\";\r\n\r\nimport { flexRow } from \"@/mixin/style\";\r\nimport { AnimatePresence, motion, PanInfo } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport BackButton from \"@/design-system/atom/iconButton/backButton/BackBtn\";\r\n\r\nexport interface ExpandBottomSheetProps {\r\n  title: string;\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\n// rem 단위 상수\r\nconst NAVBAR_HEIGHT_REM = 6.25;       // 100px\r\nconst DEFAULT_HEIGHT_REM = 25.875;    // 414px\r\nconst EXPAND_THRESHOLD_REM = 7.5;     // 120px\r\nconst DISMISS_THRESHOLD_REM = 6.25;   // 100px\r\nconst SNAP_RATIO = 0.6;\r\n\r\nexport default function ExpandBottomSheet({\r\n  title,\r\n  isOpen,\r\n  onClose,\r\n  children,\r\n}: ExpandBottomSheetProps) {\r\n  const [maxHeight, setMaxHeight] = useState<number>(40); // rem 단위 (SSR 대비 기본값)\r\n  const [sheetHeight, setSheetHeight] = useState<number>(DEFAULT_HEIGHT_REM);\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n\r\n  // mount 시/리사이즈 시 최대 높이 갱신\r\n  useEffect(() => {\r\n    const compute = () => {\r\n      const vhInRem = window.innerHeight / 16; // px → rem\r\n      setMaxHeight(Math.max(18.75, vhInRem - NAVBAR_HEIGHT_REM)); // 최소 300px = 18.75rem\r\n    };\r\n    compute();\r\n    window.addEventListener(\"resize\", compute);\r\n    return () => window.removeEventListener(\"resize\", compute);\r\n  }, []);\r\n\r\n  // 열릴 때마다 초기화\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      setExpanded(false);\r\n      setSheetHeight(DEFAULT_HEIGHT_REM);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleDrag = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo) => {\r\n    if (expanded) return;\r\n    setSheetHeight((prev) => {\r\n      const deltaRem = info.delta.y / 16; // px → rem\r\n      const next = prev - deltaRem;\r\n      return Math.min(Math.max(DEFAULT_HEIGHT_REM, next), maxHeight);\r\n    });\r\n  };\r\n\r\n  const handleDragEnd = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo) => {\r\n    if (expanded) return;\r\n\r\n    const offsetRem = info.offset.y / 16; // px → rem\r\n\r\n    if (offsetRem > DISMISS_THRESHOLD_REM) {\r\n      onClose();\r\n      return;\r\n    }\r\n\r\n    if (-offsetRem > EXPAND_THRESHOLD_REM || sheetHeight >= maxHeight * SNAP_RATIO) {\r\n      setExpanded(true);\r\n      setSheetHeight(maxHeight);\r\n      return;\r\n    }\r\n\r\n    setExpanded(false);\r\n    setSheetHeight(DEFAULT_HEIGHT_REM);\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <motion.div\r\n          key=\"overlay\"\r\n          className=\"bg-black/60 fixed inset-0 w-full flex items-end\"\r\n          onClick={onClose}\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n        >\r\n          <motion.div\r\n            key=\"bottomSheet\"\r\n            initial={{ y: \"100%\" }}\r\n            animate={{ y: 0 }}\r\n            exit={{ y: \"100%\" }}\r\n            transition={{ type: \"tween\", duration: 0.3 }}\r\n            drag={expanded ? false : \"y\"}\r\n            dragConstraints={{ top: 0, bottom: 0 }}\r\n            dragElastic={0.2}\r\n            dragMomentum={false}\r\n            onDrag={handleDrag}\r\n            onDragEnd={handleDragEnd}\r\n            style={{ height: `${sheetHeight}rem` }}\r\n            className={`\r\n              w-full\r\n              max-h-[calc(100vh-6.25rem)]\r\n              bg-white\r\n              shadow-[0.25rem_0.25rem_0.8125rem_0px_#00000040]\r\n              ${expanded ? \"\" : \"rounded-tl-lg rounded-tr-lg\"}\r\n              overflow-y-auto\r\n              transition-[height] duration-200\r\n            `}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {expanded && (\r\n              <motion.header\r\n                className={`\r\n                  w-full \r\n                  h-[3.8125rem] \r\n                  pt-[0.6875rem] \r\n                  pr-[8.3125rem] \r\n                  pb-[1.625rem] \r\n                  pl-[1rem]\r\n                  ${flexRow}\r\n                  items-center\r\n                  justify-between\r\n                `}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n                exit={{ opacity: 0 }}\r\n                transition={{ duration: 0.25 }}\r\n              >\r\n                <BackButton onClick={onClose} />\r\n                <p className=\"text-xl font-bold color-neutral-black\">\r\n                  {title}\r\n                </p>\r\n              </motion.header>\r\n            )}\r\n            <main className=\"w-full h-auto pr-[1rem] pl-[1rem]\">\r\n              {children}\r\n            </main>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}\r\n","\"use client\";\r\n\r\nimport { flexRowCenter } from \"@/mixin/style\";\r\nimport Decibel, { DecibelIconLevel } from \"@/design-system/atom/decibelLevel/Decibel\";\r\n\r\ntype DecibelButtonProps = {\r\n    level: DecibelIconLevel; // 데시벨 단계\r\n    label: string; // 버튼 하단 텍스트\r\n    active?: boolean; // 버튼 활성화 상태\r\n    className?: string; // 버튼 스타일\r\n    textClassName?: string; // 텍스트 스타일\r\n    onClick?: React.MouseEventHandler<HTMLButtonElement>; // 클릭 이벤트\r\n};\r\n\r\nexport default function DecibelButton({\r\n    level,\r\n    label,\r\n    active,\r\n    className = \"\",\r\n    textClassName = \"\",\r\n    onClick,\r\n}: DecibelButtonProps) {\r\n\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            className={`\r\n                min-w-[10.125rem] \r\n                min-h-[2.5rem] \r\n                rounded-[1.25rem] \r\n                border \r\n                px-[1rem]\r\n                py-[0.625rem] \r\n                ${active ? \"border-primary bg-neutral-gray-bg\" : \"border-neutral-gray-soft bg-white\"} \r\n                ${className}\r\n                ${flexRowCenter}\r\n            `}\r\n        >\r\n            <div className={`${flexRowCenter} gap-[0.375rem]`}>\r\n                <Decibel level={level} size=\"sm\" />\r\n                <p\r\n                    className={`\r\n                        text-sm\r\n                        font-regular \r\n                        ${active ? \"text-primary-blue-strong\" : \"text-neutral-gray-sub\"} \r\n                        ${flexRowCenter}\r\n                        ${textClassName}\r\n                    `}\r\n                >\r\n                    {label}\r\n                </p>\r\n            </div>\r\n        </button>\r\n    );\r\n}","import { flexRow } from \"@/mixin/style\";\r\nimport Decibel from \"@/design-system/atom/decibelLevel/Decibel\";\r\n\r\ntype DecibelLevel = \"quiet\" | \"moderate\" | \"loud\";\r\n\r\ninterface DecibelLabelProps {\r\n  level: DecibelLevel;\r\n}\r\n\r\nconst labelMap: Record<DecibelLevel, string> = {\r\n  quiet: \"조용함\",\r\n  moderate: \"적절함\",\r\n  loud: \"시끄러움\",\r\n};\r\n\r\nexport default function DecibelLabel({ level }: DecibelLabelProps) {\r\n  return (\r\n    <div \r\n        className={`\r\n            min-w-[4.625rem]\r\n            h-[1.5rem]\r\n            ${flexRow} \r\n            items-center \r\n            gap-[0.5rem]\r\n        `}\r\n    >\r\n      <Decibel size=\"md\" level={level} />\r\n      <p className=\"font-medium text-base text-neutral-black\">\r\n        {labelMap[level]}\r\n      </p>\r\n    </div>\r\n  );\r\n}","\"use client\";\r\n\r\nimport { flexCol } from \"@/mixin/style\";\r\nimport Decibel from \"@/design-system/atom/decibelLevel/Decibel\";\r\n\r\ntype DecibelLevel = \"default\" | \"quiet\" | \"moderate\" | \"loud\";\r\n\r\ninterface MeasureDecibelLabelProps {\r\n  level: DecibelLevel;\r\n}\r\n\r\nconst labelMap: Record<DecibelLevel, string> = {\r\n    default: \"측정전\",\r\n    quiet: \"조용함\",\r\n    moderate: \"적절함\",\r\n    loud: \"시끄러움\",\r\n};\r\n\r\nexport default function MDecibelLabel({ level }: MeasureDecibelLabelProps) {\r\n    return (\r\n        <div \r\n            className={`\r\n                min-w-[3.25rem]\r\n                h-[3.875rem]\r\n                ${flexCol}\r\n                items-center\r\n                gap-[0.625rem]\r\n            `}\r\n        >\r\n            <Decibel size=\"lg\" level={level} />\r\n            <p \r\n                className={`\r\n                    text-xl \r\n                    font-bold \r\n                    ${level === \"default\" ? \"text-neutral-sub\" : \"text-primary\"}\r\n                `}\r\n            >\r\n                {labelMap[level]}\r\n            </p>\r\n        </div>\r\n    );\r\n}","\"use client\";\r\n\r\nimport { flexColCenter } from '@/mixin/style';\r\nimport { AnimatePresence, motion } from 'framer-motion';\r\n\r\nexport interface ModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst overlayVariants = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1 },\r\n  exit: { opacity: 0 },\r\n};\r\n\r\nconst modalVariants = {\r\n  hidden: { opacity: 0, y: 30 },\r\n  visible: { opacity: 1, y: 0 },\r\n  exit: { opacity: 0, y: 30 },\r\n};\r\n\r\nexport default function Modal({ isOpen, onClose, children }: ModalProps) {\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <>\r\n          <motion.div\r\n            key=\"overlay\"\r\n            className={`bg-black/60 fixed inset-0 ${flexColCenter} w-full h-screen`}\r\n            onClick={onClose}\r\n            variants={overlayVariants}\r\n            initial=\"hidden\"\r\n            animate=\"visible\"\r\n            exit=\"exit\"\r\n          >\r\n            <motion.div\r\n              key=\"modal\"\r\n              className=\"bg-white \r\n                          shadow-modal \r\n                          rounded-[0.960625rem] \r\n                          p-[1rem_0.96875rem] \r\n                        \"\r\n              variants={modalVariants}\r\n              initial=\"hidden\"\r\n              animate=\"visible\"\r\n              exit=\"exit\"\r\n            >\r\n              {children}\r\n            </motion.div>\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n}","'use client';\r\n\r\nimport NavItem from \"@/design-system/atom/navItem/NavItem\";\r\nimport { flexRow, flexRowCenter } from \"@/mixin/style\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nexport interface NavListItem {\r\n    href: string;\r\n    label: string;\r\n    img: {\r\n        icon: string;\r\n        iconLabel: string;\r\n        activeIcon: string;\r\n    };\r\n}\r\n\r\ninterface NavListProps {\r\n    items: NavListItem[];\r\n    currentPath?: string; // Storybook에서 Active 상태 확인용\r\n}\r\n\r\nconst container = {\r\n  hidden: { opacity: 0, y: 6 },\r\n  show: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: { when: \"beforeChildren\", staggerChildren: 0.06, duration: 0.18 },\r\n  },\r\n};\r\n\r\nconst child = {\r\n  hidden: { opacity: 0, y: 4 },\r\n  show: { opacity: 1, y: 0, transition: { duration: 0.18 } },\r\n};\r\n\r\nexport default function NavList({ \r\n    items, \r\n    currentPath \r\n}: NavListProps) {\r\n\r\n    return (\r\n        <motion.nav\r\n            variants={container}\r\n            initial=\"hidden\"\r\n            animate=\"show\"\r\n            className={`\r\n                w-full \r\n                h-[6.25rem] \r\n                ${flexRowCenter}\r\n                shadow-[0_-1px_4px_0_rgba(0,0,0,0.15)] \r\n                pt-2.5 \r\n                pr-[2.9375rem] \r\n                pb-10 \r\n                pl-[2.875rem]\r\n            `}\r\n        >\r\n            <div \r\n                className={`\r\n                    w-full\r\n                    h-[3.125rem]\r\n                    ${flexRow} \r\n                    items-center \r\n                    justify-between\r\n                `}\r\n            >\r\n                {items.map((item) => (\r\n                    <motion.div key={item.href} variants={child}>\r\n                        <NavItem\r\n                            key={item.href}\r\n                            href={item.href}\r\n                            img={item.img}\r\n                            label={item.label}\r\n                            currentPath={currentPath} // Active 상태 fallback\r\n                        />\r\n                    </motion.div>\r\n                ))}\r\n            </div>\r\n        </motion.nav>\r\n    );\r\n}"],"mappings":"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","names":["Image","import_image","Image","import_image","Image","import_image","Image","import_image","sizeStyles","Image","Link","import_image","sizeStyles","Image","import_image","sizeStyles","Image","import_framer_motion","import_image","Image","import_image","import_link","import_framer_motion","Link","Image","import_image","import_react","import_framer_motion","Image","import_framer_motion","import_framer_motion","import_react","labelMap","import_framer_motion","import_framer_motion"]}